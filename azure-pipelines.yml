trigger:
  - main
pool:
  vmImage: ubuntu-latest

variables:
  npm_config_cache: $(Pipeline.Workspace)/.npm


# jobs:
#   - job: install
#     pool:
#       vmImage: 'Ubuntu 16.04'
#     steps:
#     - bash: npm install
#       displayName: NPM Install Dependencies
#       condition: ne(variables['CacheRestored'], 'true')
#     - bash: ng lint
#       displayName: Run Angular linting
# - task: RestoreAndSaveCache@1
#   inputs:
#     keyfile: '**/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json'
#     targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
#     vstsFeed: '106881c5-1e85-4e16-a467-be2702084631'
#     platformIndependent: true
steps:
  # - task: RestoreAndSaveCache@1
  #   inputs:
  #     keyfile: '**/package-lock.json, !**/node_modules/**/package-lock.json, !**/.*/**/package-lock.json'
  #     targetfolder: '**/node_modules, !**/node_modules/**/node_modules'
  #     vstsFeed: '106881c5-1e85-4e16-a467-be2702084631'
  #     platformIndependent: true
  - task: Cache@2
    inputs:
      key: 'package-lock.json'
      path: $(npm_config_cache)
    displayName: Cache NPM packages
  - script: | 
      npm ci --cache $(npm_config_cache) --prefer-offline
    displayName: NPM Install Dependencies
    # You need to set --cache explicitly, because the default location on POSIX systems is ~/.npm, which can't be accessed in a build agent as far as I know
  - script: |
      npm cache ls
      npm cache verify
    displayName: NPM Show cache
    # condition: ne(variables['CacheRestored'], 'true')
  - script: npm run lint
    displayName: Lint
  - script: npm run test:ci
    displayName: Unit Tests
  - script: npm run build
    displayName: Build
